/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./scripts/clientscripts/bullshit-bingo.ts");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./scripts/clientscripts/bb-cl-bar-buttons.ts":
/*!****************************************************!*\
  !*** ./scripts/clientscripts/bb-cl-bar-buttons.ts ***!
  \****************************************************/
/*! exports provided: BarButtons */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"BarButtons\", function() { return BarButtons; });\nclass BarButtons {\r\n    constructor(leaveRoomBtn, autofillBtn, createRoomBtn, toggleInfoBtn) {\r\n        this.leaveRoomBtn = leaveRoomBtn;\r\n        this.autofillBtn = autofillBtn;\r\n        this.createRoomBtn = createRoomBtn;\r\n        this.toggleInfoBtn = toggleInfoBtn;\r\n    }\r\n}\r\n;\r\n\n\n//# sourceURL=webpack:///./scripts/clientscripts/bb-cl-bar-buttons.ts?");

/***/ }),

/***/ "./scripts/clientscripts/bb-cl-bingo-phase.ts":
/*!****************************************************!*\
  !*** ./scripts/clientscripts/bb-cl-bingo-phase.ts ***!
  \****************************************************/
/*! exports provided: BingoPhase */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"BingoPhase\", function() { return BingoPhase; });\n/* harmony import */ var _bb_cl_game_cache__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./bb-cl-game-cache */ \"./scripts/clientscripts/bb-cl-game-cache.ts\");\n/* harmony import */ var _bb_cl_room__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./bb-cl-room */ \"./scripts/clientscripts/bb-cl-room.ts\");\n\r\n\r\nclass BingoPhase {\r\n    constructor() { }\r\n    startBingoPhase(roomArr) {\r\n        const _self = this;\r\n        _bb_cl_game_cache__WEBPACK_IMPORTED_MODULE_0__[\"GameCache\"].matchfield.cardsFlipAnimation().then(() => {\r\n            _self.addEventsBingoPhase();\r\n            _self.socketAddEventsBingoPhase();\r\n        });\r\n        _bb_cl_game_cache__WEBPACK_IMPORTED_MODULE_0__[\"GameCache\"].barButtons.autofillBtn.hide();\r\n        _bb_cl_game_cache__WEBPACK_IMPORTED_MODULE_0__[\"GameCache\"].room = new _bb_cl_room__WEBPACK_IMPORTED_MODULE_1__[\"Room\"](roomArr);\r\n        $('#bb_cardsContainer').append(_bb_cl_game_cache__WEBPACK_IMPORTED_MODULE_0__[\"GameCache\"].room.roomBuildOtherFieldsHTML());\r\n        $('#bb_countdownContainer').fadeOut(800);\r\n        $('.bb_userReady').hide();\r\n        $('.bb_userField').addClass('bb_userField_Clickable');\r\n        _bb_cl_game_cache__WEBPACK_IMPORTED_MODULE_0__[\"GameCache\"].darkMode.repaint();\r\n    }\r\n    addEventsBingoPhase() {\r\n        const documentClickHandler = (e) => {\r\n            let target = $(e.target);\r\n            target =\r\n                target.parent().hasClass('bb_userField') === true\r\n                    ? target.parent()\r\n                    : target;\r\n            if (target.hasClass('bb_userField') === true) {\r\n                if (target.hasClass('bb_userSelected') === false) {\r\n                    _bb_cl_game_cache__WEBPACK_IMPORTED_MODULE_0__[\"GameCache\"].room.roomSelectCardField(target.attr('data-player-id'));\r\n                }\r\n                return;\r\n            }\r\n            target =\r\n                target.hasClass('bb_card_text') === true ? target.parent() : target;\r\n            if (target.hasClass('bb_cardHit') === true) {\r\n                return;\r\n            }\r\n            if (target.hasClass('bb_card') === true) {\r\n                if (_bb_cl_game_cache__WEBPACK_IMPORTED_MODULE_0__[\"GameCache\"].selectedCardsGrid.attr('data-player-id') ===\r\n                    _bb_cl_game_cache__WEBPACK_IMPORTED_MODULE_0__[\"GameCache\"].thisPlayerId) {\r\n                    if (_bb_cl_game_cache__WEBPACK_IMPORTED_MODULE_0__[\"GameCache\"].matchfield.cardChangeEl != null) {\r\n                        const id = target.attr('data-card-id');\r\n                        if (id !== _bb_cl_game_cache__WEBPACK_IMPORTED_MODULE_0__[\"GameCache\"].matchfield.cardChangeEl.attr('data-card-id')) {\r\n                            _bb_cl_game_cache__WEBPACK_IMPORTED_MODULE_0__[\"GameCache\"].matchfield.cardsRemoveConfirmBox(_bb_cl_game_cache__WEBPACK_IMPORTED_MODULE_0__[\"GameCache\"].matchfield.cardChangeEl);\r\n                            _bb_cl_game_cache__WEBPACK_IMPORTED_MODULE_0__[\"GameCache\"].matchfield.cardsAddConfirmBox(target);\r\n                        }\r\n                    }\r\n                    else {\r\n                        _bb_cl_game_cache__WEBPACK_IMPORTED_MODULE_0__[\"GameCache\"].matchfield.cardsAddConfirmBox(target);\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                if (_bb_cl_game_cache__WEBPACK_IMPORTED_MODULE_0__[\"GameCache\"].matchfield.cardChangeEl != null) {\r\n                    _bb_cl_game_cache__WEBPACK_IMPORTED_MODULE_0__[\"GameCache\"].matchfield.cardsRemoveConfirmBox(_bb_cl_game_cache__WEBPACK_IMPORTED_MODULE_0__[\"GameCache\"].matchfield.cardChangeEl);\r\n                }\r\n            }\r\n        };\r\n        $(document).on('click', documentClickHandler);\r\n    }\r\n    socketAddEventsBingoPhase() {\r\n        const cardHitHandler = (data) => {\r\n            _bb_cl_game_cache__WEBPACK_IMPORTED_MODULE_0__[\"GameCache\"].matchfield.cardsSetHit(data.playerId, data.cardId, data.isHit);\r\n        }, playerLaterBingoPhase = (data) => {\r\n            data.todo;\r\n        };\r\n        _bb_cl_game_cache__WEBPACK_IMPORTED_MODULE_0__[\"GameCache\"].socket.on('cardHit', cardHitHandler);\r\n        _bb_cl_game_cache__WEBPACK_IMPORTED_MODULE_0__[\"GameCache\"].socket.on('playerLaterBingoPhase', playerLaterBingoPhase);\r\n        _bb_cl_game_cache__WEBPACK_IMPORTED_MODULE_0__[\"GameCache\"].socket.on('playerWin', winData => {\r\n            console.log('[GAME END] ', winData.playerId, $('.bb_cardsGrid[data-selected=\"true\"]').attr('data-player-id'));\r\n            if (winData.playerId === _bb_cl_game_cache__WEBPACK_IMPORTED_MODULE_0__[\"GameCache\"].thisPlayerId) {\r\n                _bb_cl_game_cache__WEBPACK_IMPORTED_MODULE_0__[\"GameCache\"].matchfield.drawWinLine(winData.winLine);\r\n                _bb_cl_game_cache__WEBPACK_IMPORTED_MODULE_0__[\"GameCache\"].matchfield.playWinAnimation();\r\n            }\r\n            else {\r\n                _bb_cl_game_cache__WEBPACK_IMPORTED_MODULE_0__[\"GameCache\"].matchfield.playOtherPlayerWinAnimation(winData.playerId);\r\n                console.log('Other player won');\r\n            }\r\n        });\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack:///./scripts/clientscripts/bb-cl-bingo-phase.ts?");

/***/ }),

/***/ "./scripts/clientscripts/bb-cl-card.ts":
/*!*********************************************!*\
  !*** ./scripts/clientscripts/bb-cl-card.ts ***!
  \*********************************************/
/*! exports provided: Card */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Card\", function() { return Card; });\n/* harmony import */ var _bb_cl_word__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./bb-cl-word */ \"./scripts/clientscripts/bb-cl-word.ts\");\n\r\nclass Card {\r\n    constructor(card) {\r\n        this.id = card.id;\r\n        this.word = card.word == null ? null : new _bb_cl_word__WEBPACK_IMPORTED_MODULE_0__[\"Word\"](card.word);\r\n        this.posX = card.posX;\r\n        this.posY = card.posY;\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack:///./scripts/clientscripts/bb-cl-card.ts?");

/***/ }),

/***/ "./scripts/clientscripts/bb-cl-collect-phase.ts":
/*!******************************************************!*\
  !*** ./scripts/clientscripts/bb-cl-collect-phase.ts ***!
  \******************************************************/
/*! exports provided: CollectPhase */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CollectPhase\", function() { return CollectPhase; });\n/* harmony import */ var _bb_cl_game_cache__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./bb-cl-game-cache */ \"./scripts/clientscripts/bb-cl-game-cache.ts\");\n/* harmony import */ var _bb_cl_card__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./bb-cl-card */ \"./scripts/clientscripts/bb-cl-card.ts\");\n/* harmony import */ var _bb_cl_room__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./bb-cl-room */ \"./scripts/clientscripts/bb-cl-room.ts\");\n\r\n\r\n\r\nclass CollectPhase {\r\n    constructor() {\r\n    }\r\n    get countdownId() {\r\n        return this._countdownId;\r\n    }\r\n    startCollectPhase(room) {\r\n        console.debug('RoomJoinedCache: ', _bb_cl_game_cache__WEBPACK_IMPORTED_MODULE_0__[\"GameCache\"]);\r\n        _bb_cl_game_cache__WEBPACK_IMPORTED_MODULE_0__[\"GameCache\"].room = new _bb_cl_room__WEBPACK_IMPORTED_MODULE_2__[\"Room\"](room);\r\n        const urlWithoutParams = location.protocol + '//' + location.host;\r\n        _bb_cl_game_cache__WEBPACK_IMPORTED_MODULE_0__[\"GameCache\"].nextFocusCardId = null;\r\n        history.pushState(null, '', urlWithoutParams + '?r=' + _bb_cl_game_cache__WEBPACK_IMPORTED_MODULE_0__[\"GameCache\"].room.id);\r\n        _bb_cl_game_cache__WEBPACK_IMPORTED_MODULE_0__[\"GameCache\"].barButtons.createRoomBtn.hide();\r\n        $('#bb_lobbyContainer').fadeIn(1600);\r\n        _bb_cl_game_cache__WEBPACK_IMPORTED_MODULE_0__[\"GameCache\"].room.roomAddPlayer(_bb_cl_game_cache__WEBPACK_IMPORTED_MODULE_0__[\"GameCache\"].room.playerMap);\r\n        _bb_cl_game_cache__WEBPACK_IMPORTED_MODULE_0__[\"GameCache\"].selectedCardsGrid.attr('data-player-id', _bb_cl_game_cache__WEBPACK_IMPORTED_MODULE_0__[\"GameCache\"].socket.id);\r\n        _bb_cl_game_cache__WEBPACK_IMPORTED_MODULE_0__[\"GameCache\"].selectedCardsGrid.html(_bb_cl_game_cache__WEBPACK_IMPORTED_MODULE_0__[\"GameCache\"].matchfield.matchfieldBuildHTML(_bb_cl_game_cache__WEBPACK_IMPORTED_MODULE_0__[\"GameCache\"].room.playerMap.get(_bb_cl_game_cache__WEBPACK_IMPORTED_MODULE_0__[\"GameCache\"].socket.id).cardMap));\r\n        const removeEventsCollectPhase = this.addEventsCollectPhase();\r\n        this.socketAddEventsCollectPhase(removeEventsCollectPhase);\r\n        _bb_cl_game_cache__WEBPACK_IMPORTED_MODULE_0__[\"GameCache\"].darkMode.repaint();\r\n        $('#bb_cardsContainer').fadeIn(800);\r\n        _bb_cl_game_cache__WEBPACK_IMPORTED_MODULE_0__[\"GameCache\"].barButtons.leaveRoomBtn.fadeIn(800);\r\n        _bb_cl_game_cache__WEBPACK_IMPORTED_MODULE_0__[\"GameCache\"].barButtons.autofillBtn.fadeIn(800);\r\n    }\r\n    addEventsCollectPhase() {\r\n        const _self = this, keydownHandler = function (e) {\r\n            let keyCode = e.keyCode || e.which;\r\n            if (keyCode == 9) {\r\n                if (_bb_cl_game_cache__WEBPACK_IMPORTED_MODULE_0__[\"GameCache\"].matchfield.cardChangeEl != null) {\r\n                    e.preventDefault();\r\n                    let number = parseInt(_bb_cl_game_cache__WEBPACK_IMPORTED_MODULE_0__[\"GameCache\"].matchfield.cardChangeEl.attr('data-card-id'));\r\n                    if (e.shiftKey) {\r\n                        number--;\r\n                    }\r\n                    else {\r\n                        number++;\r\n                    }\r\n                    _bb_cl_game_cache__WEBPACK_IMPORTED_MODULE_0__[\"GameCache\"].nextFocusCardId = number;\r\n                    _bb_cl_game_cache__WEBPACK_IMPORTED_MODULE_0__[\"GameCache\"].matchfield.matchfieldSetNewTextToCard(_bb_cl_game_cache__WEBPACK_IMPORTED_MODULE_0__[\"GameCache\"].matchfield.cardChangeEl);\r\n                }\r\n            }\r\n            if (keyCode == 13) {\r\n                if (_bb_cl_game_cache__WEBPACK_IMPORTED_MODULE_0__[\"GameCache\"].matchfield.cardChangeEl != null) {\r\n                    e.preventDefault();\r\n                    _bb_cl_game_cache__WEBPACK_IMPORTED_MODULE_0__[\"GameCache\"].matchfield.matchfieldSetNewTextToCard(_bb_cl_game_cache__WEBPACK_IMPORTED_MODULE_0__[\"GameCache\"].matchfield.cardChangeEl);\r\n                }\r\n            }\r\n            if (keyCode == 27) {\r\n                if (_bb_cl_game_cache__WEBPACK_IMPORTED_MODULE_0__[\"GameCache\"].matchfield.cardChangeEl != null) {\r\n                    e.preventDefault();\r\n                    _bb_cl_game_cache__WEBPACK_IMPORTED_MODULE_0__[\"GameCache\"].matchfield.matchfieldRevertCard(_bb_cl_game_cache__WEBPACK_IMPORTED_MODULE_0__[\"GameCache\"].matchfield.cardChangeEl);\r\n                }\r\n                if (_bb_cl_game_cache__WEBPACK_IMPORTED_MODULE_0__[\"GameCache\"].matchfield.isInfoOpen === true) {\r\n                    _bb_cl_game_cache__WEBPACK_IMPORTED_MODULE_0__[\"GameCache\"].matchfield.toggleInfo();\r\n                }\r\n            }\r\n        }, documentClickHandler = (e) => {\r\n            let target = $(e.target);\r\n            target =\r\n                target.hasClass('bb_card_text') === true ? target.parent() : target;\r\n            if (target.hasClass('bb_card') === true) {\r\n                const id = parseInt(target.attr('data-card-id'));\r\n                if (_bb_cl_game_cache__WEBPACK_IMPORTED_MODULE_0__[\"GameCache\"].matchfield.cardChangeEl != null) {\r\n                    if (id !== parseInt(_bb_cl_game_cache__WEBPACK_IMPORTED_MODULE_0__[\"GameCache\"].matchfield.cardChangeEl.attr('data-card-id'))) {\r\n                        _bb_cl_game_cache__WEBPACK_IMPORTED_MODULE_0__[\"GameCache\"].nextFocusCardId = id;\r\n                        _bb_cl_game_cache__WEBPACK_IMPORTED_MODULE_0__[\"GameCache\"].matchfield.matchfieldSetNewTextToCard(_bb_cl_game_cache__WEBPACK_IMPORTED_MODULE_0__[\"GameCache\"].matchfield.cardChangeEl);\r\n                    }\r\n                }\r\n                else {\r\n                    _bb_cl_game_cache__WEBPACK_IMPORTED_MODULE_0__[\"GameCache\"].matchfield.matchfieldAddTextAreaToCard(target);\r\n                }\r\n            }\r\n            else {\r\n                if (_bb_cl_game_cache__WEBPACK_IMPORTED_MODULE_0__[\"GameCache\"].matchfield.cardChangeEl != null) {\r\n                    _bb_cl_game_cache__WEBPACK_IMPORTED_MODULE_0__[\"GameCache\"].matchfield.matchfieldSetNewTextToCard(_bb_cl_game_cache__WEBPACK_IMPORTED_MODULE_0__[\"GameCache\"].matchfield.cardChangeEl);\r\n                }\r\n            }\r\n        }, removeEventsCollectPhase = () => {\r\n            $(document).off('keydown', keydownHandler);\r\n            $(document).off('click', documentClickHandler);\r\n        };\r\n        $(document).on('keydown', keydownHandler);\r\n        $(document).on('click', documentClickHandler);\r\n        return removeEventsCollectPhase;\r\n    }\r\n    socketAddEventsCollectPhase(removeEventsCollectPhaseFunc) {\r\n        const _self = this, playerIsReadyChangedHandler = (data) => {\r\n            _bb_cl_game_cache__WEBPACK_IMPORTED_MODULE_0__[\"GameCache\"].room.roomSetPlayerReadyHTML(data.playerId, data.isReady);\r\n            if (data.isReady === false) {\r\n                _bb_cl_game_cache__WEBPACK_IMPORTED_MODULE_0__[\"GameCache\"].room.roomStopCountdown();\r\n            }\r\n        }, autofillResultHandler = (changedCardsArr) => {\r\n            _bb_cl_game_cache__WEBPACK_IMPORTED_MODULE_0__[\"GameCache\"].matchfield.cardsAutofill(_bb_cl_game_cache__WEBPACK_IMPORTED_MODULE_0__[\"GameCache\"].matchfield.arrToCardMap(changedCardsArr));\r\n        }, cardValidationResultHandler = function (card) {\r\n            if (card != null) {\r\n                _bb_cl_game_cache__WEBPACK_IMPORTED_MODULE_0__[\"GameCache\"].matchfield.matchfieldSetCard(new _bb_cl_card__WEBPACK_IMPORTED_MODULE_1__[\"Card\"](card));\r\n            }\r\n            else {\r\n                _bb_cl_game_cache__WEBPACK_IMPORTED_MODULE_0__[\"GameCache\"].matchfield.shakeAndStay(_bb_cl_game_cache__WEBPACK_IMPORTED_MODULE_0__[\"GameCache\"].matchfield.cardChangeEl);\r\n            }\r\n        }, startCountdownHandler = (timeMS) => {\r\n            _bb_cl_game_cache__WEBPACK_IMPORTED_MODULE_0__[\"GameCache\"].room.roomStartCountdown(timeMS);\r\n        }, phaseChangedToBingoHandler = (playRoom) => {\r\n            removeEventsCollectPhaseFunc();\r\n            _bb_cl_game_cache__WEBPACK_IMPORTED_MODULE_0__[\"GameCache\"].socket.off('playerIsReadyChanged', playerIsReadyChangedHandler);\r\n            _bb_cl_game_cache__WEBPACK_IMPORTED_MODULE_0__[\"GameCache\"].socket.off('autofillResult', autofillResultHandler);\r\n            _bb_cl_game_cache__WEBPACK_IMPORTED_MODULE_0__[\"GameCache\"].socket.off('cardValidationResult', cardValidationResultHandler);\r\n            _bb_cl_game_cache__WEBPACK_IMPORTED_MODULE_0__[\"GameCache\"].socket.off('startCountdown', startCountdownHandler);\r\n            _bb_cl_game_cache__WEBPACK_IMPORTED_MODULE_0__[\"GameCache\"].socket.off('phaseChangedToBingo', phaseChangedToBingoHandler);\r\n            _bb_cl_game_cache__WEBPACK_IMPORTED_MODULE_0__[\"GameCache\"].bingoPhase.startBingoPhase(playRoom);\r\n        };\r\n        _bb_cl_game_cache__WEBPACK_IMPORTED_MODULE_0__[\"GameCache\"].socket.on('playerIsReadyChanged', playerIsReadyChangedHandler);\r\n        _bb_cl_game_cache__WEBPACK_IMPORTED_MODULE_0__[\"GameCache\"].socket.on('autofillResult', autofillResultHandler);\r\n        _bb_cl_game_cache__WEBPACK_IMPORTED_MODULE_0__[\"GameCache\"].socket.on('cardValidationResult', cardValidationResultHandler);\r\n        _bb_cl_game_cache__WEBPACK_IMPORTED_MODULE_0__[\"GameCache\"].socket.on('startCountdown', startCountdownHandler);\r\n        _bb_cl_game_cache__WEBPACK_IMPORTED_MODULE_0__[\"GameCache\"].socket.on('phaseChangedBingo', phaseChangedToBingoHandler);\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack:///./scripts/clientscripts/bb-cl-collect-phase.ts?");

/***/ }),

/***/ "./scripts/clientscripts/bb-cl-confetti.ts":
/*!*************************************************!*\
  !*** ./scripts/clientscripts/bb-cl-confetti.ts ***!
  \*************************************************/
/*! exports provided: Confetti */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Confetti\", function() { return Confetti; });\nclass Confetti {\r\n    constructor(targetEl) {\r\n        this._el = targetEl;\r\n    }\r\n    start(value) {\r\n        this._el.show();\r\n        for (let i = 0; i < value; i++) {\r\n            this.create(i);\r\n        }\r\n    }\r\n    create(i) {\r\n        let width = Math.random() * 40;\r\n        let height = width * 0.4;\r\n        let colourIdx = Math.ceil(Math.random() * 3);\r\n        let colour = 'red';\r\n        switch (colourIdx) {\r\n            case 1:\r\n                colour = 'orange';\r\n                break;\r\n            case 2:\r\n                colour = 'cyan';\r\n                break;\r\n            case 3:\r\n                colour = 'yellow';\r\n            default:\r\n                colour = 'red';\r\n        }\r\n        $('<div class=\"confetti-' + i + ' ' + colour + ' snip\"></div>')\r\n            .css({\r\n            width: width + 'px',\r\n            height: height + 'px',\r\n            top: -Math.random() * 20 + '%',\r\n            left: Math.random() * 100 + '%',\r\n            opacity: Math.random() + 0.5,\r\n            transform: 'rotate(' + Math.random() * 360 + 'deg)'\r\n        })\r\n            .appendTo(this._el);\r\n        this.drop(i);\r\n    }\r\n    drop(x) {\r\n        const _self = this;\r\n        $('.confetti-' + x).animate({\r\n            top: '100%',\r\n            left: '+=' + Math.random() * 15 + '%'\r\n        }, Math.random() * 3000 + 3000, function () {\r\n            _self.reset(x);\r\n        });\r\n    }\r\n    reset(x) {\r\n        const _self = this;\r\n        $('.confetti-' + x).animate({\r\n            top: -Math.random() * 20 + '%',\r\n            left: '-=' + Math.random() * 15 + '%'\r\n        }, 0, function () {\r\n            _self.drop(x);\r\n        });\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack:///./scripts/clientscripts/bb-cl-confetti.ts?");

/***/ }),

/***/ "./scripts/clientscripts/bb-cl-darkmode.ts":
/*!*************************************************!*\
  !*** ./scripts/clientscripts/bb-cl-darkmode.ts ***!
  \*************************************************/
/*! exports provided: DarkMode */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DarkMode\", function() { return DarkMode; });\nclass DarkMode {\r\n    constructor() {\r\n        this._isDarkMode = false;\r\n        const _self = this;\r\n        this.ToggleDarkBtn = $('#bb_toggleDarkBtn'),\r\n            this.ToggleDarkBtn.click(() => {\r\n                _self.toggle();\r\n            });\r\n        if (this.getDarkModeSetting() === true) {\r\n            this.toggle();\r\n        }\r\n        else {\r\n            $('body').css({ background: '#F2E2C4' });\r\n        }\r\n    }\r\n    get isDarkMode() {\r\n        return this._isDarkMode;\r\n    }\r\n    toggle(force = null) {\r\n        this._isDarkMode = force == null ? this._isDarkMode === false : force;\r\n        if (this._isDarkMode === true) {\r\n            this.setDarkModeSetting(true);\r\n            $('body').addClass('darkI');\r\n            $('.bb_card').addClass('dark');\r\n            $('#bb_info').addClass('darkI');\r\n            $('#bodyOverlay').css('opacity', 0.6);\r\n            $('.bb_cardBtn').addClass('cardBtnDark');\r\n        }\r\n        else {\r\n            this.setDarkModeSetting(false);\r\n            $('body')\r\n                .css({ background: '#F2E2C4' })\r\n                .removeClass('darkI');\r\n            $('.bb_card').removeClass('dark');\r\n            $('#bb_info').removeClass('darkI');\r\n            $('#bodyOverlay').css('opacity', 0.1);\r\n            $('.bb_cardBtn').removeClass('cardBtnDark');\r\n        }\r\n        const bgColor = this._isDarkMode === true\r\n            ? 'rgb(34, 34, 34, 0.8)'\r\n            : 'rgb(242, 226, 196, 0.8)';\r\n        $('.bb_cardHit').each((i, element) => {\r\n            $(element).css({\r\n                background: \"url('../img/cardBG.png'), radial-gradient(rgb(152, 166, 123, 1), \" +\r\n                    bgColor +\r\n                    ')'\r\n            });\r\n        });\r\n    }\r\n    repaint() {\r\n        this.toggle(this._isDarkMode);\r\n    }\r\n    getDarkModeSetting() {\r\n        let isDark = localStorage.getItem('_isDarkMode');\r\n        if (isDark == 'true') {\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }\r\n    setDarkModeSetting(value) {\r\n        localStorage.setItem('_isDarkMode', value === true ? 'true' : 'false');\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack:///./scripts/clientscripts/bb-cl-darkmode.ts?");

/***/ }),

/***/ "./scripts/clientscripts/bb-cl-game-cache.ts":
/*!***************************************************!*\
  !*** ./scripts/clientscripts/bb-cl-game-cache.ts ***!
  \***************************************************/
/*! exports provided: GameCache */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"GameCache\", function() { return GameCache; });\nclass GameCache {\r\n}\r\n\n\n//# sourceURL=webpack:///./scripts/clientscripts/bb-cl-game-cache.ts?");

/***/ }),

/***/ "./scripts/clientscripts/bb-cl-matchfield.ts":
/*!***************************************************!*\
  !*** ./scripts/clientscripts/bb-cl-matchfield.ts ***!
  \***************************************************/
/*! exports provided: Matchfield */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Matchfield\", function() { return Matchfield; });\n/* harmony import */ var _bb_cl_game_cache__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./bb-cl-game-cache */ \"./scripts/clientscripts/bb-cl-game-cache.ts\");\n/* harmony import */ var _bb_cl_card__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./bb-cl-card */ \"./scripts/clientscripts/bb-cl-card.ts\");\n/* harmony import */ var _bb_cl_confetti__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./bb-cl-confetti */ \"./scripts/clientscripts/bb-cl-confetti.ts\");\n\r\n\r\n\r\nclass Matchfield {\r\n    constructor() {\r\n        this._isInfoOpen = false;\r\n    }\r\n    get cardChangeEl() {\r\n        return this._cardChangeEl;\r\n    }\r\n    get isInfoOpen() {\r\n        return this._isInfoOpen;\r\n    }\r\n    matchfieldBuildHTML(cardMap) {\r\n        let fieldHTML = '';\r\n        for (const card of cardMap.values()) {\r\n            const word = card.word != null ? card.word.text : '';\r\n            fieldHTML +=\r\n                '<div class=\"bb_card\" data-card-id=\"' +\r\n                    card.id +\r\n                    '\" data-x=\"' +\r\n                    card.posX +\r\n                    '\" data-y=\"' +\r\n                    card.posY +\r\n                    '\" style=\"grid-column: ' +\r\n                    card.posX +\r\n                    '; grid-row: ' +\r\n                    card.posY +\r\n                    ';\">' +\r\n                    '<span class=\"bb_card_text\">' +\r\n                    word +\r\n                    '</span>' +\r\n                    '</div>';\r\n        }\r\n        return fieldHTML;\r\n    }\r\n    matchfieldSetCard(card) {\r\n        _bb_cl_game_cache__WEBPACK_IMPORTED_MODULE_0__[\"GameCache\"].room.getThisPlayer().cardMap.set(parseInt(card.id), card);\r\n        _bb_cl_game_cache__WEBPACK_IMPORTED_MODULE_0__[\"GameCache\"].matchfield.matchfieldSetCardTextHTML(_bb_cl_game_cache__WEBPACK_IMPORTED_MODULE_0__[\"GameCache\"].selectedCardsGrid.find('[data-card-id=' + card.id + ']'), card.word != null ? card.word.text : '');\r\n    }\r\n    matchfieldSetCardTextHTML(element, text) {\r\n        element.removeClass('bb_card_focus');\r\n        element.html('<span class=\"bb_card_text\"></span>');\r\n        element.find('.bb_card_text').text(text);\r\n        this._cardChangeEl = null;\r\n        this.matchfieldCheckAllCardsFilled();\r\n        this.matchfieldFocusNextCard();\r\n    }\r\n    matchfieldFocusNextCard() {\r\n        if (_bb_cl_game_cache__WEBPACK_IMPORTED_MODULE_0__[\"GameCache\"].nextFocusCardId != null) {\r\n            this.matchfieldAddTextAreaToCard(_bb_cl_game_cache__WEBPACK_IMPORTED_MODULE_0__[\"GameCache\"].selectedCardsGrid.find('[data-card-id=' + +_bb_cl_game_cache__WEBPACK_IMPORTED_MODULE_0__[\"GameCache\"].nextFocusCardId + ']'));\r\n            _bb_cl_game_cache__WEBPACK_IMPORTED_MODULE_0__[\"GameCache\"].nextFocusCardId = null;\r\n        }\r\n    }\r\n    matchfieldDoesCardTextExist(text) {\r\n        if (text == null || text === '') {\r\n            return false;\r\n        }\r\n        for (let card of _bb_cl_game_cache__WEBPACK_IMPORTED_MODULE_0__[\"GameCache\"].room.playerMap\r\n            .get(_bb_cl_game_cache__WEBPACK_IMPORTED_MODULE_0__[\"GameCache\"].socket.id)\r\n            .cardMap.values()) {\r\n            if (card.word != null && card.word.text === text) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    matchfieldCheckAllCardsFilled() {\r\n        let areAllCardsFilled = true;\r\n        const cardMap = _bb_cl_game_cache__WEBPACK_IMPORTED_MODULE_0__[\"GameCache\"].room.playerMap.get(_bb_cl_game_cache__WEBPACK_IMPORTED_MODULE_0__[\"GameCache\"].socket.id).cardMap;\r\n        for (let card of cardMap.values()) {\r\n            if (card.word == null || card.word.text === '') {\r\n                this.revertReady();\r\n                areAllCardsFilled = false;\r\n                break;\r\n            }\r\n        }\r\n        this.readyBtnVisible(areAllCardsFilled);\r\n    }\r\n    matchfieldAddTextAreaToCard(element) {\r\n        this._cardChangeEl = element;\r\n        let text = element.find('span').text();\r\n        let dark = _bb_cl_game_cache__WEBPACK_IMPORTED_MODULE_0__[\"GameCache\"].darkMode.isDarkMode === true ? 'dark' : '';\r\n        element\r\n            .addClass('bb_card_focus')\r\n            .html('<textarea id=\"bb_cardTextArea\" class=\"bb_card_text ' +\r\n            dark +\r\n            '\" maxlength=\"32\"></textarea>');\r\n        $('#bb_cardTextArea')\r\n            .focus()\r\n            .val(text);\r\n    }\r\n    matchfieldSetNewTextToCard(element) {\r\n        let text = element.find('textarea').val();\r\n        return this.matchfieldValidateCard(element, text != null ? text.toString() : '');\r\n    }\r\n    matchfieldRevertCard(element) {\r\n        const word = _bb_cl_game_cache__WEBPACK_IMPORTED_MODULE_0__[\"GameCache\"].room\r\n            .getThisPlayer()\r\n            .cardMap.get(parseInt(element.attr('data-card-id'))).word;\r\n        return this.matchfieldValidateCard(element, word != null ? word.text : '');\r\n    }\r\n    matchfieldValidateCard(element, text) {\r\n        text = text.trim();\r\n        const card = _bb_cl_game_cache__WEBPACK_IMPORTED_MODULE_0__[\"GameCache\"].room\r\n            .getThisPlayer()\r\n            .cardMap.get(parseInt(element.attr('data-card-id')));\r\n        if ((card.word == null && text === '') ||\r\n            (card.word != null && card.word.text === text)) {\r\n            this.matchfieldSetCardTextHTML(this._cardChangeEl, text);\r\n            return true;\r\n        }\r\n        if (this.matchfieldDoesCardTextExist(text) === false) {\r\n            _bb_cl_game_cache__WEBPACK_IMPORTED_MODULE_0__[\"GameCache\"].socket.emit('setCard', {\r\n                cardId: element.attr('data-card-id'),\r\n                cardText: text\r\n            });\r\n            return true;\r\n        }\r\n        else {\r\n            this.shakeAndStay(element);\r\n            return false;\r\n        }\r\n    }\r\n    revertReady() {\r\n        if (_bb_cl_game_cache__WEBPACK_IMPORTED_MODULE_0__[\"GameCache\"].room.getThisPlayer().isReady === true) {\r\n            _bb_cl_game_cache__WEBPACK_IMPORTED_MODULE_0__[\"GameCache\"].socket.emit('toggleReady');\r\n            $('bb_thisUserReady').hide();\r\n        }\r\n        _bb_cl_game_cache__WEBPACK_IMPORTED_MODULE_0__[\"GameCache\"].room.getThisPlayer().isReady = false;\r\n    }\r\n    shakeAndStay(element) {\r\n        element.find('textarea').focus();\r\n        element.removeClass('bb_card_focus').addClass('shake_short');\r\n        setTimeout(function () {\r\n            element.removeClass('shake_short').addClass('bb_card_focus');\r\n        }, 820);\r\n    }\r\n    cardsAutofill(changedCardMap) {\r\n        const cardMap = _bb_cl_game_cache__WEBPACK_IMPORTED_MODULE_0__[\"GameCache\"].room.getThisPlayer().cardMap;\r\n        let time = 0;\r\n        for (const cardItem of changedCardMap.values()) {\r\n            cardMap.set(parseInt(cardItem.id), cardItem);\r\n            const cardEl = _bb_cl_game_cache__WEBPACK_IMPORTED_MODULE_0__[\"GameCache\"].selectedCardsGrid.find('[data-card-id=' + cardItem.id + ']');\r\n            this.matchfieldSetCardTextHTML(cardEl, cardItem.word.text);\r\n            const cardSpan = cardEl.find('span');\r\n            cardSpan.hide();\r\n            setTimeout(function () {\r\n                cardSpan.fadeIn(800);\r\n            }, time);\r\n            time += 50;\r\n        }\r\n    }\r\n    cardsFlipAnimation() {\r\n        return new Promise(resolve => {\r\n            const bigText = $('#bb_bigText')\r\n                .text('bingo')\r\n                .addClass('fadeLeftToRight')\r\n                .show();\r\n            const cardsText = $('.bb_card_text').addClass('mirror');\r\n            const cardsContainer = $('#bb_cardsContainer').addClass('flip');\r\n            setTimeout(function () {\r\n                bigText.hide().removeClass('fadeLeftToRight');\r\n                cardsText.removeClass('mirror');\r\n                cardsContainer.removeClass('flip');\r\n                resolve();\r\n            }, 2500);\r\n        });\r\n    }\r\n    cardsAddConfirmBox(cardEl) {\r\n        const _self = this;\r\n        const dark = _bb_cl_game_cache__WEBPACK_IMPORTED_MODULE_0__[\"GameCache\"].darkMode.isDarkMode === true ? ' cardBtnDark' : '';\r\n        cardEl.find('.bb_card_text').css({ margin: '0 auto' });\r\n        cardEl\r\n            .append('<div class=\"bb_cardConfirmBox\"><button id=\"bb_cardSubmit\" class=\"bb_cardBtn' +\r\n            dark +\r\n            '\"><i class=\"mi\">done</i>' +\r\n            '</button><button id=\"bb_cardCancel\" class=\"bb_cardBtn' +\r\n            dark +\r\n            '\"><i class=\"mi\">close</i></button></div>')\r\n            .addClass('bb_card_focus');\r\n        $('#bb_cardSubmit').on('click', () => {\r\n            _bb_cl_game_cache__WEBPACK_IMPORTED_MODULE_0__[\"GameCache\"].socket.emit('cardWordSaid', _self._cardChangeEl.attr('data-card-id'));\r\n            _bb_cl_game_cache__WEBPACK_IMPORTED_MODULE_0__[\"GameCache\"].socket.emit('cardHit', _self._cardChangeEl.attr('data-card-id'));\r\n        });\r\n        $('#bb_cardCancel').on('click', () => {\r\n            _self.cardsRemoveConfirmBox(_self.cardChangeEl);\r\n        });\r\n        this._cardChangeEl = cardEl;\r\n    }\r\n    cardsRemoveConfirmBox(cardEl) {\r\n        cardEl.find('.bb_card_text').attr('style', '');\r\n        cardEl\r\n            .removeClass('bb_card_focus')\r\n            .find('.bb_cardConfirmBox')\r\n            .remove();\r\n        this._cardChangeEl = null;\r\n    }\r\n    cardsSetHit(playerId, cardId, isHit) {\r\n        console.log(playerId, cardId, isHit);\r\n        const card = _bb_cl_game_cache__WEBPACK_IMPORTED_MODULE_0__[\"GameCache\"].room.playerMap\r\n            .get(playerId)\r\n            .cardMap.get(parseInt(cardId));\r\n        card.isHit = isHit;\r\n        this.cardsHittedShowUserFieldToast(playerId, card);\r\n        const cardEl = $('.bb_cardsGrid[data-player-id=\"' + playerId + '\"]').find('[data-card-id=' + cardId + ']');\r\n        const bgColor = _bb_cl_game_cache__WEBPACK_IMPORTED_MODULE_0__[\"GameCache\"].darkMode.isDarkMode === true\r\n            ? 'rgb(34, 34, 34, 0.8)'\r\n            : 'rgb(242, 226, 196, 0.8)';\r\n        if (isHit === true) {\r\n            cardEl.addClass('bb_cardHit');\r\n            cardEl.css({\r\n                background: \"url('../img/cardBG.png'), radial-gradient(rgb(152, 166, 123, 1), \" +\r\n                    bgColor +\r\n                    ')'\r\n            });\r\n        }\r\n        else {\r\n            cardEl.removeClass('bb_cardHit');\r\n            cardEl.attr('style', '');\r\n        }\r\n        this.cardsHittedCutBorder();\r\n    }\r\n    cardsHittedShowUserFieldToast(playerId, card) {\r\n        const userField = $('.bb_userField[data-player-id=' + playerId + ']');\r\n        const $toast = $(`<span class=\"bb_userFieldToast fadeUp\">${card.word.text}</span>`);\r\n        userField.append($toast);\r\n        setTimeout(() => {\r\n            $toast.fadeOut(900);\r\n        }, 3000);\r\n        setTimeout(() => {\r\n            $toast.remove();\r\n        }, 4000);\r\n    }\r\n    cardsHittedCutBorder() {\r\n        console.log('cardsHittedCutBorder');\r\n        const _self = this;\r\n        $('.bb_cardHit').each((_i, element) => {\r\n            const el = $(element), x = parseInt(el.attr('data-x')), y = parseInt(el.attr('data-y')), upEl = el.siblings('[data-x=\"' + x + '\"][data-y=\"' + (y - 1) + '\"]'), rightEl = el.siblings('[data-x=\"' + (x + 1) + '\"][data-y=\"' + y + '\"]'), bottomEl = el.siblings('[data-x=\"' + x + '\"][data-y=\"' + (y + 1) + '\"]'), leftEl = el.siblings('[data-x=\"' + (x - 1) + '\"][data-y=\"' + y + '\"]');\r\n            if (upEl.hasClass('bb_cardHit') === true) {\r\n                _self.borderNone(el, 'top');\r\n                _self.borderNone(upEl, 'bottom');\r\n            }\r\n            if (rightEl.hasClass('bb_cardHit') === true) {\r\n                _self.borderNone(el, 'right');\r\n                _self.borderNone(rightEl, 'left');\r\n            }\r\n            if (bottomEl.hasClass('bb_cardHit') === true) {\r\n                _self.borderNone(el, 'bottom');\r\n                _self.borderNone(bottomEl, 'top');\r\n            }\r\n            if (leftEl.hasClass('bb_cardHit') === true) {\r\n                _self.borderNone(el, 'left');\r\n                _self.borderNone(leftEl, 'right');\r\n            }\r\n        });\r\n    }\r\n    showFieldSwitchAnimation(fieldHide, fieldShow) {\r\n        fieldHide.fadeOut(400);\r\n        fieldShow.fadeIn(200);\r\n    }\r\n    toggleInfo() {\r\n        this._isInfoOpen = !this._isInfoOpen;\r\n        $('#bb_info').fadeToggle(400);\r\n    }\r\n    getUrlParam(param) {\r\n        let query = window.location.search.substring(1);\r\n        let vars = query.split('&');\r\n        for (let i = 0; i < vars.length; i++) {\r\n            let pair = vars[i].split('=');\r\n            if (pair[0] == param) {\r\n                return pair[1];\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    readyBtnVisible(isVisible) {\r\n        if (isVisible === true) {\r\n            $('#bb_thisUserField').addClass('pulse');\r\n            $('#bb_thisUserReady').show();\r\n        }\r\n        else {\r\n            $('#bb_thisUserField').removeClass('pulse');\r\n            $('#bb_thisUserReady').hide();\r\n        }\r\n    }\r\n    arrToCardMap(cardArr) {\r\n        const cardMap = new Map();\r\n        for (let i = 0; i < cardArr.length; i++) {\r\n            cardMap.set(cardArr[i][0], new _bb_cl_card__WEBPACK_IMPORTED_MODULE_1__[\"Card\"](cardArr[i][1]));\r\n        }\r\n        return cardMap;\r\n    }\r\n    showErrorToast(errorStr) {\r\n        $('#bb_errorToast')\r\n            .finish()\r\n            .text(errorStr)\r\n            .fadeIn(300)\r\n            .delay(4000)\r\n            .fadeOut(800);\r\n    }\r\n    playWinAnimation() {\r\n        this._confetti = new _bb_cl_confetti__WEBPACK_IMPORTED_MODULE_2__[\"Confetti\"]($('#confettiContainer'));\r\n        this._confetti.start(50);\r\n        const cardsContainer = $('#bb_cardsContainer').addClass('implode'), bigText = $('#bb_bigText')\r\n            .addClass('bb_bigTextCenter')\r\n            .text('Elitehäider')\r\n            .addClass('implodeRev')\r\n            .show();\r\n        setTimeout(() => {\r\n            bigText\r\n                .hide()\r\n                .removeClass('bb_bigTextCenter')\r\n                .text('')\r\n                .removeClass('implodeRev');\r\n            cardsContainer.addClass('pulse');\r\n        }, 8000);\r\n    }\r\n    playOtherPlayerWinAnimation(playerWinId) {\r\n        const playerWin = _bb_cl_game_cache__WEBPACK_IMPORTED_MODULE_0__[\"GameCache\"].room.playerMap.get(playerWinId), bigText = $('#bb_bigText')\r\n            .addClass('bb_bigTextCenter')\r\n            .text(`${playerWin.avatar.name} gewinnt!`)\r\n            .addClass('implodeRev')\r\n            .show();\r\n        setTimeout(() => {\r\n            bigText\r\n                .hide()\r\n                .removeClass('bb_bigTextCenter')\r\n                .text('')\r\n                .removeClass('implodeRev');\r\n        }, 8000);\r\n    }\r\n    borderNone(el, side) {\r\n        switch (side) {\r\n            case 'top':\r\n                el.css({ 'border-top': 'none' });\r\n                break;\r\n            case 'right':\r\n                el.css({ 'border-right': 'none' });\r\n                break;\r\n            case 'bottom':\r\n                el.css({ 'border-bottom': 'none' });\r\n                break;\r\n            case 'left':\r\n                el.css({ 'border-left': 'none' });\r\n                break;\r\n        }\r\n    }\r\n    drawWinLine(winLine) {\r\n        const cardsContainer = $('#bb_cardsContainer');\r\n        cardsContainer.append('<canvas id=\"bb_cardsContainerCanvas\" height=\"' +\r\n            cardsContainer.height() +\r\n            '\" width=\"' +\r\n            cardsContainer.width() +\r\n            '\"></canvas>');\r\n        const cardHeightPx = cardsContainer.height() / 5, cardWidthPx = cardsContainer.width() / 5, heightHalfPx = cardHeightPx / 2, widthHalfPx = cardWidthPx / 2, canvasEl = $('#bb_cardsContainerCanvas').get(0), ctx = canvasEl.getContext('2d');\r\n        ctx.moveTo(winLine.startX * cardWidthPx - widthHalfPx, winLine.startY * cardHeightPx - heightHalfPx);\r\n        ctx.lineTo(winLine.endX * cardWidthPx - widthHalfPx, winLine.endY * cardHeightPx - heightHalfPx);\r\n        ctx.strokeStyle = `rgb(70, 137, 102, 0.5)`;\r\n        ctx.lineWidth = 10;\r\n        ctx.stroke();\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack:///./scripts/clientscripts/bb-cl-matchfield.ts?");

/***/ }),

/***/ "./scripts/clientscripts/bb-cl-player.ts":
/*!***********************************************!*\
  !*** ./scripts/clientscripts/bb-cl-player.ts ***!
  \***********************************************/
/*! exports provided: Player */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Player\", function() { return Player; });\n/* harmony import */ var _bb_cl_card__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./bb-cl-card */ \"./scripts/clientscripts/bb-cl-card.ts\");\n\r\nclass Player {\r\n    constructor(player) {\r\n        this.id = player.id;\r\n        this.avatar = player.avatar;\r\n        this.isReady = player.isReady;\r\n        this.cardMap = new Map();\r\n        this.phase = player.phase;\r\n        this.status = player.status;\r\n        const _self = this;\r\n        player.cardMap.forEach(function (card) {\r\n            _self.cardMap.set(card[0], new _bb_cl_card__WEBPACK_IMPORTED_MODULE_0__[\"Card\"](card[1]));\r\n        });\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack:///./scripts/clientscripts/bb-cl-player.ts?");

/***/ }),

/***/ "./scripts/clientscripts/bb-cl-room.ts":
/*!*********************************************!*\
  !*** ./scripts/clientscripts/bb-cl-room.ts ***!
  \*********************************************/
/*! exports provided: Room */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Room\", function() { return Room; });\n/* harmony import */ var _bb_cl_game_cache__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./bb-cl-game-cache */ \"./scripts/clientscripts/bb-cl-game-cache.ts\");\n/* harmony import */ var _bb_cl_player__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./bb-cl-player */ \"./scripts/clientscripts/bb-cl-player.ts\");\n\r\n\r\nclass Room {\r\n    constructor(room) {\r\n        this.id = room.id;\r\n        this.playerMap = new Map();\r\n        const _self = this;\r\n        room.playerMap.forEach((player) => {\r\n            _self.playerMap.set(player[0], new _bb_cl_player__WEBPACK_IMPORTED_MODULE_1__[\"Player\"](player[1]));\r\n        });\r\n    }\r\n    roomAddPlayer(playerMap) {\r\n        const _self = this;\r\n        playerMap.forEach((player) => {\r\n            _self.roomAddPlayerHTML(player);\r\n        });\r\n    }\r\n    roomAddPlayerHTML(player) {\r\n        const isReadyStyle = player.isReady === true ? 'style=\"display: block;\"' : '';\r\n        if (player.id === _bb_cl_game_cache__WEBPACK_IMPORTED_MODULE_0__[\"GameCache\"].socket.id) {\r\n            $('#bb_lobbyContainer').append('<div id=\"bb_thisUserField\" class=\"bb_userField bb_userSelected\" data-player-id=\"' +\r\n                player.id +\r\n                '\"><img id=\"bb_thisUserPic\" src=\"' +\r\n                player.avatar.picUrl +\r\n                '\" class=\"bb_userPic\" alt=\"Profilbild\" />' +\r\n                '<input id=\"bb_thisUserInput\" class=\"bb_userName\" type=\"text\" value=\"' +\r\n                player.avatar.name +\r\n                '\"><button id=\"bb_thisUserReady\" class=\"btn bb_userReady\">' +\r\n                '<i class=\"mi\">done</i></button><div class=\"bb_userFieldPointer\"></div></div>');\r\n            $('#bb_thisUserInput').change((el) => {\r\n                _bb_cl_game_cache__WEBPACK_IMPORTED_MODULE_0__[\"GameCache\"].socket.emit('changeName', $(el.target).val());\r\n            });\r\n            $('#bb_thisUserReady').click(() => {\r\n                _bb_cl_game_cache__WEBPACK_IMPORTED_MODULE_0__[\"GameCache\"].socket.emit('toggleReady');\r\n            });\r\n        }\r\n        else {\r\n            $('#bb_lobbyContainer').append('<div class=\"bb_userField\" data-player-id=\"' +\r\n                player.id +\r\n                '\"><i class=\"mi bb_userReady\" ' +\r\n                isReadyStyle +\r\n                '>done</i>' +\r\n                '<img src=\"' +\r\n                player.avatar.picUrl +\r\n                '\" class=\"bb_userPic\" alt=\"Profilbild\" />' +\r\n                '<div class=\"bb_userName\">' +\r\n                player.avatar.name +\r\n                '</div><div class=\"bb_userFieldPointer\"></div></div>');\r\n        }\r\n    }\r\n    roomRemovePlayerHTML(playerId) {\r\n        $('.bb_userField[data-player-id=' + playerId + ']').remove();\r\n    }\r\n    roomPlayerChangeName(playerId, name) {\r\n        $('.bb_userField[data-player-id=' + playerId + ']')\r\n            .find('.bb_userName')\r\n            .text(name);\r\n    }\r\n    roomSetPlayerReadyHTML(playerId, isReady) {\r\n        if (playerId === _bb_cl_game_cache__WEBPACK_IMPORTED_MODULE_0__[\"GameCache\"].socket.id) {\r\n            if (isReady === true) {\r\n                $('#bb_thisUserField').removeClass('pulse');\r\n                $('#bb_thisUserReady').css({ color: 'green' });\r\n            }\r\n            else {\r\n                $('#bb_thisUserField').addClass('pulse');\r\n                $('#bb_thisUserReady').css({ color: 'gray' });\r\n            }\r\n        }\r\n        else {\r\n            let player = $('.bb_userField[data-player-id=' + playerId + ']');\r\n            if (player != null) {\r\n                if (isReady === true) {\r\n                    player.find('.bb_userReady').show();\r\n                }\r\n                else {\r\n                    player.find('.bb_userReady').hide();\r\n                }\r\n            }\r\n        }\r\n    }\r\n    roomStartCountdown(timeMS) {\r\n        $('#bb_countdownContainer').fadeIn(300);\r\n        const counterEl = $('#bb_countdownCounter');\r\n        this._countdownId = null;\r\n        const countDown = (timeMS) => {\r\n            counterEl.text(Math.floor(timeMS / 1000));\r\n            this._countdownId = setTimeout(() => {\r\n                counterEl.text(Math.floor(timeMS / 1000));\r\n                if (timeMS > 0) {\r\n                    timeMS = timeMS - 1000;\r\n                    countDown(timeMS);\r\n                }\r\n            }, 1000);\r\n        };\r\n        countDown(timeMS);\r\n    }\r\n    roomStopCountdown() {\r\n        clearTimeout(this._countdownId);\r\n        $('#bb_countdownContainer').fadeOut(800);\r\n    }\r\n    roomUnreadyPlayer(playerMap) {\r\n        if (this.roomIsBingoPhase() === false) {\r\n            for (const player of playerMap.values()) {\r\n                console.log('roomUnreadyPlayer', player);\r\n                this.roomSetPlayerReadyHTML(player.id, false);\r\n                player.isReady = false;\r\n            }\r\n        }\r\n    }\r\n    roomIsBingoPhase() {\r\n        for (const player of this.playerMap.values()) {\r\n            if (player.phase === 2) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    roomBuildOtherFieldsHTML() {\r\n        let fieldsHtml = '';\r\n        for (const player of this.playerMap.values()) {\r\n            if (player.id !== _bb_cl_game_cache__WEBPACK_IMPORTED_MODULE_0__[\"GameCache\"].thisPlayerId) {\r\n                fieldsHtml +=\r\n                    '<div class=\"bb_cardsGrid\" data-selected=\"false\" data-player-id=\"' +\r\n                        player.id +\r\n                        '\" style=\"display: none;\">' +\r\n                        _bb_cl_game_cache__WEBPACK_IMPORTED_MODULE_0__[\"GameCache\"].matchfield.matchfieldBuildHTML(player.cardMap) +\r\n                        '</div>';\r\n            }\r\n        }\r\n        return fieldsHtml;\r\n    }\r\n    roomSelectCardField(playerId) {\r\n        $('.bb_userSelected').removeClass('bb_userSelected');\r\n        const userField = $(`.bb_userField[data-player-id=${playerId}]`);\r\n        userField.addClass('bb_userSelected');\r\n        this.roomShowCardField(userField.attr('data-player-id'));\r\n    }\r\n    roomShowCardField(playerId) {\r\n        console.log('Hide old selected: ', _bb_cl_game_cache__WEBPACK_IMPORTED_MODULE_0__[\"GameCache\"].selectedCardsGrid);\r\n        _bb_cl_game_cache__WEBPACK_IMPORTED_MODULE_0__[\"GameCache\"].selectedCardsGrid.attr('data-selected', 'false');\r\n        const newSelected = $('.bb_cardsGrid[data-player-id=\"' + playerId + '\"]').attr('data-selected', 'true');\r\n        console.log('new selected: ', playerId, newSelected);\r\n        _bb_cl_game_cache__WEBPACK_IMPORTED_MODULE_0__[\"GameCache\"].matchfield.showFieldSwitchAnimation(_bb_cl_game_cache__WEBPACK_IMPORTED_MODULE_0__[\"GameCache\"].selectedCardsGrid, newSelected);\r\n        _bb_cl_game_cache__WEBPACK_IMPORTED_MODULE_0__[\"GameCache\"].selectedCardsGrid = newSelected;\r\n    }\r\n    getThisPlayer() {\r\n        return this.playerMap.get(_bb_cl_game_cache__WEBPACK_IMPORTED_MODULE_0__[\"GameCache\"].socket.id);\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack:///./scripts/clientscripts/bb-cl-room.ts?");

/***/ }),

/***/ "./scripts/clientscripts/bb-cl-word.ts":
/*!*********************************************!*\
  !*** ./scripts/clientscripts/bb-cl-word.ts ***!
  \*********************************************/
/*! exports provided: Word */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Word\", function() { return Word; });\nclass Word {\r\n    constructor(word) {\r\n        this.id = word.id;\r\n        this.text = word.text;\r\n        this.countGuessed = word.countGuessed;\r\n        this.countUsed = word.countUsed;\r\n        this.createdAt = word.createdAt;\r\n        this.changedAt = word.changedAt;\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack:///./scripts/clientscripts/bb-cl-word.ts?");

/***/ }),

/***/ "./scripts/clientscripts/bullshit-bingo.ts":
/*!*************************************************!*\
  !*** ./scripts/clientscripts/bullshit-bingo.ts ***!
  \*************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _bb_cl_collect_phase__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./bb-cl-collect-phase */ \"./scripts/clientscripts/bb-cl-collect-phase.ts\");\n/* harmony import */ var _bb_cl_player__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./bb-cl-player */ \"./scripts/clientscripts/bb-cl-player.ts\");\n/* harmony import */ var _bb_cl_darkmode__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./bb-cl-darkmode */ \"./scripts/clientscripts/bb-cl-darkmode.ts\");\n/* harmony import */ var _bb_cl_game_cache__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./bb-cl-game-cache */ \"./scripts/clientscripts/bb-cl-game-cache.ts\");\n/* harmony import */ var _bb_cl_matchfield__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./bb-cl-matchfield */ \"./scripts/clientscripts/bb-cl-matchfield.ts\");\n/* harmony import */ var _bb_cl_bar_buttons__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./bb-cl-bar-buttons */ \"./scripts/clientscripts/bb-cl-bar-buttons.ts\");\n/* harmony import */ var _bb_cl_bingo_phase__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./bb-cl-bingo-phase */ \"./scripts/clientscripts/bb-cl-bingo-phase.ts\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass BullshitBingo {\r\n    constructor() {\r\n        _bb_cl_game_cache__WEBPACK_IMPORTED_MODULE_3__[\"GameCache\"].socket = io.connect(window.location.host);\r\n        _bb_cl_game_cache__WEBPACK_IMPORTED_MODULE_3__[\"GameCache\"].darkMode = new _bb_cl_darkmode__WEBPACK_IMPORTED_MODULE_2__[\"DarkMode\"]();\r\n        _bb_cl_game_cache__WEBPACK_IMPORTED_MODULE_3__[\"GameCache\"].matchfield = new _bb_cl_matchfield__WEBPACK_IMPORTED_MODULE_4__[\"Matchfield\"]();\r\n        _bb_cl_game_cache__WEBPACK_IMPORTED_MODULE_3__[\"GameCache\"].collectPhase = new _bb_cl_collect_phase__WEBPACK_IMPORTED_MODULE_0__[\"CollectPhase\"]();\r\n        _bb_cl_game_cache__WEBPACK_IMPORTED_MODULE_3__[\"GameCache\"].bingoPhase = new _bb_cl_bingo_phase__WEBPACK_IMPORTED_MODULE_6__[\"BingoPhase\"]();\r\n        _bb_cl_game_cache__WEBPACK_IMPORTED_MODULE_3__[\"GameCache\"].barButtons = new _bb_cl_bar_buttons__WEBPACK_IMPORTED_MODULE_5__[\"BarButtons\"]($('#bb_leaveRoomBtn'), $('#bb_autofillBtn'), $('#bb_createRoomBtn'), $('.bb_toggleInfoBtn'));\r\n        _bb_cl_game_cache__WEBPACK_IMPORTED_MODULE_3__[\"GameCache\"].selectedCardsGrid = $('.bb_cardsGrid[data-selected=true]');\r\n        _bb_cl_game_cache__WEBPACK_IMPORTED_MODULE_3__[\"GameCache\"].roomId = _bb_cl_game_cache__WEBPACK_IMPORTED_MODULE_3__[\"GameCache\"].matchfield.getUrlParam('r');\r\n        this.socketAddEvents();\r\n        this.addEvents();\r\n        if (_bb_cl_game_cache__WEBPACK_IMPORTED_MODULE_3__[\"GameCache\"].roomId != null) {\r\n            _bb_cl_game_cache__WEBPACK_IMPORTED_MODULE_3__[\"GameCache\"].socket.emit('joinRoom', _bb_cl_game_cache__WEBPACK_IMPORTED_MODULE_3__[\"GameCache\"].roomId);\r\n        }\r\n    }\r\n    addEvents() {\r\n        const _self = this;\r\n        $('#bb_createRoomBtn').click(() => {\r\n            _bb_cl_game_cache__WEBPACK_IMPORTED_MODULE_3__[\"GameCache\"].socket.emit('joinRoom', null);\r\n        });\r\n        _bb_cl_game_cache__WEBPACK_IMPORTED_MODULE_3__[\"GameCache\"].barButtons.toggleInfoBtn.click(() => {\r\n            _bb_cl_game_cache__WEBPACK_IMPORTED_MODULE_3__[\"GameCache\"].matchfield.toggleInfo();\r\n        });\r\n        _bb_cl_game_cache__WEBPACK_IMPORTED_MODULE_3__[\"GameCache\"].barButtons.leaveRoomBtn.click(() => {\r\n            _bb_cl_game_cache__WEBPACK_IMPORTED_MODULE_3__[\"GameCache\"].socket.disconnect();\r\n            history.pushState(null, '', location.protocol + '//' + location.host);\r\n            location.reload();\r\n        });\r\n        _bb_cl_game_cache__WEBPACK_IMPORTED_MODULE_3__[\"GameCache\"].barButtons.autofillBtn.click(() => {\r\n            _bb_cl_game_cache__WEBPACK_IMPORTED_MODULE_3__[\"GameCache\"].socket.emit('needAutofill');\r\n        });\r\n    }\r\n    socketAddEvents() {\r\n        const _self = this;\r\n        _bb_cl_game_cache__WEBPACK_IMPORTED_MODULE_3__[\"GameCache\"].socket.on('connect', () => {\r\n            _bb_cl_game_cache__WEBPACK_IMPORTED_MODULE_3__[\"GameCache\"].thisPlayerId = _bb_cl_game_cache__WEBPACK_IMPORTED_MODULE_3__[\"GameCache\"].socket.id;\r\n        });\r\n        _bb_cl_game_cache__WEBPACK_IMPORTED_MODULE_3__[\"GameCache\"].socket.on('gameError', function (error) {\r\n            console.log('[ERROR] ', error);\r\n            _bb_cl_game_cache__WEBPACK_IMPORTED_MODULE_3__[\"GameCache\"].matchfield.showErrorToast(typeof (error) === 'object' ? JSON.stringify(error) : error);\r\n        });\r\n        _bb_cl_game_cache__WEBPACK_IMPORTED_MODULE_3__[\"GameCache\"].socket.on('disconnect', () => {\r\n            console.log(_bb_cl_game_cache__WEBPACK_IMPORTED_MODULE_3__[\"GameCache\"].socket + ' disconnected');\r\n        });\r\n        _bb_cl_game_cache__WEBPACK_IMPORTED_MODULE_3__[\"GameCache\"].socket.on('roomJoined', (roomData) => {\r\n            if (roomData == null) {\r\n                history.pushState(null, '', location.protocol + '//' + location.host);\r\n                $('#bb_createRoomBtn').show();\r\n            }\r\n            else {\r\n                _bb_cl_game_cache__WEBPACK_IMPORTED_MODULE_3__[\"GameCache\"].collectPhase.startCollectPhase(roomData);\r\n            }\r\n        });\r\n        _bb_cl_game_cache__WEBPACK_IMPORTED_MODULE_3__[\"GameCache\"].socket.on('playerJoined', (newPlayer) => {\r\n            _bb_cl_game_cache__WEBPACK_IMPORTED_MODULE_3__[\"GameCache\"].room.roomUnreadyPlayer(_bb_cl_game_cache__WEBPACK_IMPORTED_MODULE_3__[\"GameCache\"].room.playerMap);\r\n            newPlayer = new _bb_cl_player__WEBPACK_IMPORTED_MODULE_1__[\"Player\"](newPlayer);\r\n            _bb_cl_game_cache__WEBPACK_IMPORTED_MODULE_3__[\"GameCache\"].room.playerMap.set(newPlayer.id, newPlayer);\r\n            _bb_cl_game_cache__WEBPACK_IMPORTED_MODULE_3__[\"GameCache\"].room.roomAddPlayerHTML(newPlayer);\r\n            if (_bb_cl_game_cache__WEBPACK_IMPORTED_MODULE_3__[\"GameCache\"].collectPhase.countdownId != null) {\r\n                _bb_cl_game_cache__WEBPACK_IMPORTED_MODULE_3__[\"GameCache\"].room.roomStopCountdown();\r\n            }\r\n        });\r\n        _bb_cl_game_cache__WEBPACK_IMPORTED_MODULE_3__[\"GameCache\"].socket.on('playerDisconnected', (playerId) => {\r\n            _bb_cl_game_cache__WEBPACK_IMPORTED_MODULE_3__[\"GameCache\"].room.roomUnreadyPlayer(_bb_cl_game_cache__WEBPACK_IMPORTED_MODULE_3__[\"GameCache\"].room.playerMap);\r\n            _bb_cl_game_cache__WEBPACK_IMPORTED_MODULE_3__[\"GameCache\"].room.roomRemovePlayerHTML(playerId);\r\n        });\r\n        _bb_cl_game_cache__WEBPACK_IMPORTED_MODULE_3__[\"GameCache\"].socket.on('nameChanged', (data) => {\r\n            _bb_cl_game_cache__WEBPACK_IMPORTED_MODULE_3__[\"GameCache\"].room.roomPlayerChangeName(data.playerId, data.name);\r\n        });\r\n        _bb_cl_game_cache__WEBPACK_IMPORTED_MODULE_3__[\"GameCache\"].socket.on('reconnect', () => {\r\n            console.log('Reconnected: ', _bb_cl_game_cache__WEBPACK_IMPORTED_MODULE_3__[\"GameCache\"].thisPlayerId, _bb_cl_game_cache__WEBPACK_IMPORTED_MODULE_3__[\"GameCache\"].socket.id);\r\n            if (_bb_cl_game_cache__WEBPACK_IMPORTED_MODULE_3__[\"GameCache\"].room != null) {\r\n                _bb_cl_game_cache__WEBPACK_IMPORTED_MODULE_3__[\"GameCache\"].socket.emit('recoverRoom', {\r\n                    room: _bb_cl_game_cache__WEBPACK_IMPORTED_MODULE_3__[\"GameCache\"].room,\r\n                    oldId: _bb_cl_game_cache__WEBPACK_IMPORTED_MODULE_3__[\"GameCache\"].thisPlayerId\r\n                });\r\n            }\r\n        });\r\n        _bb_cl_game_cache__WEBPACK_IMPORTED_MODULE_3__[\"GameCache\"].socket.on('gameRecovered', () => {\r\n        });\r\n    }\r\n}\r\n$(document).ready(() => {\r\n    const bullshitBingo = new BullshitBingo();\r\n    $('body').fadeIn(1600);\r\n});\r\n\n\n//# sourceURL=webpack:///./scripts/clientscripts/bullshit-bingo.ts?");

/***/ })

/******/ });